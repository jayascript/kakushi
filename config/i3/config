# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# ------- #
# GENERAL #
# ------- #

# Set the mod key.
set $mod Mod4

# Reload the configuration file.
bindsym $mod+Shift+c reload

# Restart i3 inplace. This preserves your layout/session and can be used to
# upgrade i3.
bindsym $mod+Shift+r restart

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Create keybinding to lock the screen.
bindsym $mod+Shift+x exec ~/.scripts/lock.sh

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Logout, reboot, shutdown.
mode "system" {
        # These bindings trigger as soon as you enter system mode.

        # Exit i3. This logs you out of your X session.
        bindsym $mod+e exit

        # Reboot the system.
        bindsym $mod+b exec reboot

        # Shut down the system.
        bindsym $mod+s exec poweroff

        # Exit system mode.
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+q mode "default"
}

bindsym $mod+q mode "system"

# ------------------------ #
# CREATING/KILLING WINDOWS #
# ------------------------ #

# Start a terminal.
bindsym $mod+Return exec i3-sensible-terminal

# Kill focused window.
bindsym $mod+Shift+q kill

# Start dmenu (a program launcher).
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# Replace dmenu with Rofi.
bindsym $mod+d exec ~/.scripts/rofi.sh

# Enable transparency and fade effects.
exec_always compton -f

# ------------- #
# WINDOW LAYOUT #
# ------------- #

# Tile next window horizontally or vertically.
bindsym $mod+h split h
bindsym $mod+v split v

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Enter fullscreen mode for the focused container.
bindsym $mod+f fullscreen toggle

# ---------------- #
# FOCUSING WINDOWS #
# ---------------- #

# Change focus using home keys.
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# Change focus using arrow keys.
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Focus the parent container.
bindsym $mod+a focus parent

# Focus the child container.
bindsym $mod+Shift+a focus child

# -------------- #
# MOVING WINDOWS #
# -------------- #

# Move focused window using home keys.
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# Move focused window using arrow keys.
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# ---------------- #
# FLOATING WINDOWS #
# ---------------- #

# Toggle tiling / floating for focused window.
bindsym $mod+Shift+space floating toggle

# Use Mouse+$mod to drag floating windows to their wanted position.
floating_modifier $mod

# Change focus between tiling / floating windows.
bindsym $mod+space focus mode_toggle

# ---------------- #
# RESIZING WINDOWS #
# ---------------- #

# Resize windows.
mode "resize" {
        # These bindings trigger as soon as you enter resize mode.

        # Pressing left or right will shrink or expand the window's width.
        # Pressing up or down will shrink or expand the window's height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # Same bindings, but using the arrow keys.
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # Exit resize mode.
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# ---------- #
# WORKSPACES #
# ---------- #

# Define names for default workspaces. Use variables to avoid repeating the
# names in multiple places.
set $ws1 "1:üè† Main"
set $ws2 "2:üíª System"
set $ws3 "3:üë©‚Äçüíª Coding"
set $ws4 "4:üï∂Ô∏è Tor"
set $ws5 "5:üåê Browsers"
set $ws6 "6:üìë Misc"
set $ws7 "7:üìÅ Files"
set $ws8 "8:üóÉÔ∏è Misc"
set $ws9 "9:üí¨ Social"
set $ws10 "10:üéµ Media"

# Switch to workspace.
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# -------- #
# MONITORS #
# -------- #

# Configure multiple monitor setup. Script works as long as it's called on
# login. Does not work so well when un/plugging the second monitor while logged
# in. To counteract this, create "setup" mode to move workspaces btw monitors.

# Current setup runs with TV screen (secondary, DP-2) on the left.
exec_always ~/.scripts/monitor_setup.sh

# Logout, reboot, shutdown.
mode "setup" {
        # These bindings trigger as soon as you enter setup mode. Currently,
        # there is no functionality to refresh the monitor setup when an HDMI
        # cord is unplugged. So, when going from two screens back to one, it is
        # necessary to manually cycle through all open workspaces and move them
        # to the primary output.

        # Move workspace to primary output.
        bindsym $mod+Right move workspace to output primary

        # Move workspace to attached monitor. For now, this is DP-1.
        bindsym $mod+Left move workspace to DP-1

        # Exit system mode.
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Shift+s mode "default"
}

bindsym $mod+Shift+s mode "setup"

# ------------ #
# APPLICATIONS #
# ------------ #

# Assign apps to workspaces
assign [class="keepassxc"] $ws1
assign [class="org.remmina.Remmina"] $ws1
assign [class="Atom"] $ws3
assign [class="Tor Browser"] $ws4
assign [class="Firefox"] $ws5
assign [class="Brave-browser"] $ws5
assign [class="Pale moon"] $ws5
assign [class="Nextcloud"] $ws7
assign [class="Org.gnome.Nautilus"] $ws7
assign [class="Slack"] $ws9
assign [class="Wire"] $ws9
assign [class="vlc"] $ws10

# Auto-load apps on startup
exec keepassxc
exec palemoon

# ----- #
# THEME #
# ----- #

# Set wallpaper.
exec_always feh --bg-fill ~/.config/wallpaper.jpg

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
# font pango:Raleway 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 11

# Colors (unused: #16484B)
set $focused-bg #1BAAB1
set $focused-text #ffffff
set $unfocused-bg #16364B
set $unfocused-text #949DAD
set $urgent-bg #FB83A5
set $indicator #FB83A5

# Window Colors
#                       border        background    text            tiling
client.focused          $focused-bg   $focused-bg   $focused-text   $indicator
client.unfocused        $unfocused-bg $unfocused-bg $unfocused-text $indicator
client.focused_inactive $unfocused-bg $unfocused-bg $unfocused-text $indicator
client.urgent           $urgent-bg    $urgent-bg    $focused-text   #ffffff

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available).
bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
        strip_workspace_numbers yes
        colors {
          background $unfocused-bg
          separator  $focused-text
          #                   border        background    text
          focused_workspace   $focused-bg   $focused-bg   $focused-text
          active_workspace    $unfocused-bg $unfocused-bg $unfocused-text
          inactive_workspace  $unfocused-bg $unfocused-bg $unfocused-text
          urgent_workspace    $urgent-bg    $urgent-bg    $focused-text
        }
}

# ----- #
# AUDIO #
# ----- #

# Use pactl to adjust volume in PulseAudio.
# Manually update @DEFAULT_SINK@ to 0
set $refresh_i3status killall -SIGUSR1 i3status -c ~/.config/i3/i3status.conf

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle
bindsym XF86AudioMicMute exec pactl set-source-mute 0 toggle

# ------------------ #
# CUSTOM KEYBINDINGS #
# ------------------ #

# Create QR code for clipboard contents
for_window [class="feh" instance="feh"] floating enable
bindsym $mod+Insert exec qrencode -s 5 -o ~/qrcode.png $(xclip -o -selection clipboard) && exec feh ~/qrcode.png

# Open Tor Browser
bindsym $mod+t exec /opt/tor-browser_en-US/Browser/start-tor-browser
